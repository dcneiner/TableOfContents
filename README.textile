h1. Table of Contents jQuery Plugin

*Version* 0.8<br />
*Written by* "Doug Neiner":http://pixelgraphics.us <br />
*Additional Programming by* Alexandre Leray, Tiou Lims, and Dennis Stevense (for Digital Deployment)<br />
*Open Sourced under the MIT License*

_Based on code and concept by Janko Jovanovic in his article: "Automatically generate table of contents using jQuery":http://www.jankoatwarpspeed.com/post/2009/08/20/Table-of-contents-using-jQuery.aspx ._

This plugin creates a table of contents based on the <code><h1></code> through <code><h6></code> tags of a webpage, or subset of a webpage. It auto generates slug-like id's for linking if they are not present already, can optionally add "Top" links to each heading, offers the choice of nested <code><ol></code> or <code><li></code> lists or straight <code><a></code> links, and can optionally create a proportionate display based on the positioning of the headings.

h2. Examples

* "Example 1: Standard TOC, Default Options, Bulleted List":http://fuelyourcoding.com/scripts/toc/examples/example1.html
* "Example 2: H2 through H4, With Top Links, Scoped to div#wrapper, Ordered List":http://fuelyourcoding.com/scripts/toc/examples/example2.html
* "Example 3: Proportionate Spacing, H1 through H4":http://fuelyourcoding.com/scripts/toc/examples/example3.html

h2. Features

* Can be scoped to any area of the page
* Automatically determines list type based on the container DOM element for the Table of Contents
* Supports nested ordered and unordered lists, as well as a straight listing of links
* Auto-creates slug-like anchors for each heading (on headings that do not already have an id)
* Supports a proportionateSpacing formatting option to create visual TOC that represent actual amounts of content
* Is fully customizable. No CSS classes or ID's hard-coded into the plugin.
* Supports multiple instances on one page.

h2. Future Feature Ideas

* A popup preview that shows the first few lines of the content following the heading you hover over.
* Built-in support for the jQuery smooth scrolling anchor plugin (This plugin does nothing to hinder a smooth scrolling anchor plugin's use, it simply does not offer the functionality out of the box).

h2. Basic Usage

Include the jQuery library and the Table of Contents Plugin

<pre>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js" type="text/javascript"></script>
<script src="jquery.tableofcontents.min.js" type="text/javascript" charset="utf-8"></script></pre>

And call the plugin on an empty container element:

<pre>
<script type="text/javascript" charset="utf-8">
	$(document).ready(function(){
		$("div#toc").tableOfContents();
	})
</script></pre>

The container element determines the type of list that is displayed. A <code><ol></code> container will produce a nested ordered list. A <code><ul></code> container will produce a nested bulleted list. Any other container will produce a straight list of links, no nesting. 
	
_You cannot use <code>ul</code> or <code><ol></code> containers in combination with the <code>proportionateSpacing</code> option._

h2. Advanced Usage Options

The <code>tableOfContents</code> method takes two parameters:

<pre>$("#table-of-contents-container").tableOfContents(scope, options)</pre>

h3. *<code>scope</code> (default: <code>document.body</code>)*

If provided, the scope must be a valid jQuery selector (as a string), jQuery collection object, or null. If scope isn't <code>null</code> or <code>undefined</code>, it will limit the searching of the plugin to only that object and its children. If scope is <code>null</code> or <code>undefined</code>, then it defaults to <code>document.body</code>.

h3. *<code>options</code> (<code>name</code>: <code>default</code>)*

The following are the options that can accompany the function call:

<pre>$("#toc").tableOfContents(null, { optionName: "optionValue" } );</pre>

or can be set ahead of time by changing the defaultOptions object:

<pre>$.TableOfContents.defaultOptions.optionName = "optionValue";</pre>

* <code>startLevel</code>: <code>1</code>
* <code>depth</code>: <code>3</code><br /><code>startLevel</code> and <code>depth</code> work together to create a range for the Table of Contents. <code>startLevel</code> sets the lowest H tag that should be included. If you wanted your root elements to be all the <code><h2></code> tags, you would set this option to <code>2</code>. <code>depth</code> sets how deep you want your Table of Contents to be, including the <code>startLevel</code>. If you wanted to have your root elements be the <code><h2></code> tags, and wanted to also show <code><h3></code>, <code><h4></code> and <code><h5></code> tags, you would set <code>startLevel</code> to <code>2</code> and <code>depth</code> to <code>4</code>.
* <code>levelClass</code>: <code>"toc-depth-%"</code><br />If your Table of Contents container is not a <code><ol></code> or a <code><ul></code>, then a special class is applied to each link, specifying its depth in relation to the <code>startLevel</code>. First level = 1, second level = 2, etc. You can change this setting, but be sure to include the % sign as it is replaced with the actual depth before being applied to the link.
* <code>levelText</code>: <code>"%"</code><br />Use this setting to add extra text or HTML elements inside each link in the TOC. Be sure to include the % as it will be replaced with the text of the H tag it links to.
* <code>topLinks</code>: <code>false</code><br />This plugin can place "Top" links inside each H tag within its scope by setting this option to <code>true</code> or to the text/html you want it to display. If set to <code>true</code> it defaults to using the word "Top" as the text for the link.
* <code>topLinkClass</code>: <code>toc-top-link</code><br />If topLinks is enabled, this is the class that will be applied to each top link added to the page.
* <code>topBodyId</code>: <code>toc-top</code><br />If topLinks is enabled, each top link will try to link to the id of the <code>body</code> element. If no id is present, this id will be applied to the <code>body</code> element.
* <code>proportionateSpacing</code>: <code>false</code><br />This is a very special feature, directly inspired by Janko's article and code examples. If you want there to be a certain amount of spacing between each TOC link in direct proportion to the amount of vertical space between each real heading, then set this option to <code>true</code>. *If you set this to true you cannot use <code><ul></code> or <code><ol></code> as your container.* Your container cannot have the CSS <code>position</code> of <code>static</code>. It must "haveLayout" by using the <code>position</code> value of <code>fixed</code>, <code>absolute</code> or <code>relative</code>. Finally, your container must have a fixed height.